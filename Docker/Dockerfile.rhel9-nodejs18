# Stage 1 - Building the backend
FROM registry.redhat.io/rhel9/nodejs-18 as backendBuilder
COPY /apps/backend/package*.json ./
USER root
#RUN npm install npm@latest -g
RUN npm install
COPY ./apps/backend .
RUN npm run compile

# Stage 2 - Building the client
FROM registry.redhat.io/rhel9/nodejs-18 as clientBuilder
COPY /apps/client/package*.json ./
USER root
#RUN npm install npm@latest -g
RUN npm install
COPY ./apps/client .
RUN rm ./public/appConfig.json
RUN mv ./public/appConfig.docker.json ./public/appConfig.json
RUN npm run build --ignore-scripts

# Stage 3 - Building the admin
FROM registry.redhat.io/rhel9/nodejs-18 as adminBuilder
COPY /apps/admin/package*.json ./
USER root
#RUN npm install npm@latest -g
RUN npm install
COPY ./apps/admin .
RUN rm ./public/config.json
RUN mv ./public/config.docker.json ./public/config.json 
RUN npm run build --ignore-scripts

# Stage 4 - Combine everything and fire it up
FROM registry.redhat.io/rhel9/nodejs-18-minimal
COPY /apps/backend/package*.json ./
USER root
#RUN npm install npm@latest -g
RUN npm install --production
USER 1001
COPY --from=backendBuilder /opt/app-root/src/dist ./
COPY /apps/backend/.env .
COPY /apps/backend/App_Data ./App_Data_tmp
COPY /apps/backend/static ./static
COPY --from=clientBuilder /opt/app-root/src/build ./static/client
COPY --from=adminBuilder /opt/app-root/src/build ./static/admin
USER root
RUN chown -R 1001 ./App_Data_tmp
EXPOSE 3002
USER 1001
CMD node index.js

# See HAJK Docker/README.md for example usage

